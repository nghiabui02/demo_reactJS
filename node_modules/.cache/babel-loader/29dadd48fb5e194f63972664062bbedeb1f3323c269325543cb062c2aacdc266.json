{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: null\n};\nconst useSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.user = action.payload.user;\n      localStorage.setItem('token', action.payload.user.token);\n    },\n    logoutSuccess: (state, action) => {\n      localStorage.removeItem('token');\n    }\n  }\n});\nexport const {\n  loginSuccess,\n  logoutSuccess\n} = useSlice.actions;\nexport default useSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","useSlice","name","reducers","loginSuccess","state","action","payload","localStorage","setItem","token","logoutSuccess","removeItem","actions","reducer"],"sources":["/Users/nghia/Library/Mobile Documents/com~apple~CloudDocs/Code/MD5/Demo_React_Router/src/redux/slices/userSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    user: null\n}\nconst useSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        loginSuccess: (state, action) => {\n            state.user = action.payload.user;\n            localStorage.setItem('token', action.payload.user.token);\n        },\n        logoutSuccess: (state, action) => {\n            localStorage.removeItem('token');\n        },\n    }\n})\nexport const  {\n    loginSuccess,\n    logoutSuccess\n} = useSlice.actions;\nexport default useSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE;AACV,CAAC;AACD,MAAMC,QAAQ,GAAGH,WAAW,CAAC;EACzBI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACNC,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO,CAACP,IAAI;MAChCQ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,MAAM,CAACC,OAAO,CAACP,IAAI,CAACU,KAAK,CAAC;IAC5D,CAAC;IACDC,aAAa,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC9BE,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IACpC;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAO;EACVR,YAAY;EACZO;AACJ,CAAC,GAAGV,QAAQ,CAACY,OAAO;AACpB,eAAeZ,QAAQ,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}